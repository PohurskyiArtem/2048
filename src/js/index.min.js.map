{"version":3,"sources":["app.js","cell.js","game.js","index.js"],"names":["App","className","parentElement","value","tagName","element","document","min","max","Math","string","backField","strRows","i","cellValue","arrRow","test","j","searchKey","localStorage","key","field","arrayRowField","arrayField","strField","Cell","fieldElement","savedValue","cell","highlightStartTime","setTimeout","AnimateCell","fromCell","toCell","Game","size","lastGameField","lastGameScore","gameFieldElement","headerElement","gameScoreContainer","newGameBtn","previousStateBtn","k","addEventListener","event","location","resolve","window","game","emptyCells","alert","currentCell","nextCellKey","nextCell","hasMoved"],"mappings":"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","file":"index.min.js","sourcesContent":["class App {\r\n  createAndAppend(\r\n    { className, parentElement, value, tagName } = {\r\n      className,\r\n      parentElement,\r\n      value,\r\n      tagName: \"div\"\r\n    }\r\n  ) {\r\n    const element = document.createElement(tagName);\r\n    element.className = className;\r\n    value ? (element.innerHTML = value) : null;\r\n    parentElement && parentElement.appendChild(element);\r\n\r\n    return element;\r\n  }\r\n  getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n  static gameFieldToString (field) {\r\n    const strRows = [],\r\n          arrayField = [];\r\n\r\n    for(let i = 0; i < field.length; i++){\r\n      let arrayRowField = [];\r\n      for(let j = 0; j < field[i].length; j++){\r\n        arrayRowField.push([field[i][j]._value]);\r\n      }\r\n      arrayField.push(arrayRowField);\r\n    }      \r\n    for(let i = 0; i < arrayField.length; i++){\r\n        strRows.push(arrayField[i].join('&'));\r\n    }\r\n\r\n    const strField = strRows.join('||');\r\n    return strField;\r\n  }\r\n  gameFieldToArray (string) {\r\n    const backField = [];\r\n    if(string !== \"\"){\r\n      const strRows = string.split('||');\r\n\r\n      for(let i = 0; i < strRows.length; i++){\r\n          let arrRow = strRows[i].split('&');\r\n          let test = [];\r\n\r\n          for(let j = 0; j < arrRow.length; j++){\r\n              let cellValue = +arrRow[j];\r\n              test.push([cellValue]);\r\n          }\r\n          backField.push(test);\r\n      }\r\n\r\n      return backField;\r\n    } else {\r\n      return false;\r\n    }\r\n    \r\n  }\r\n  findItemInLocalStorage (searchKey){\r\n    for(let key in localStorage) {\r\n      if (!localStorage.hasOwnProperty(key)) {\r\n        continue;\r\n      }\r\n      if(key === searchKey){\r\n          return localStorage.getItem(searchKey);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","class Cell extends App {\r\n  constructor(fieldElement, game, savedValue) {\r\n    super();\r\n    this.game = game;\r\n    this.fieldElement = fieldElement;\r\n    this.element = super.createAndAppend({\r\n      className: \"game-field__cell\",\r\n      parentElement: fieldElement\r\n    });\r\n    if(savedValue != null){\r\n      this.spawn(savedValue);\r\n    } else{\r\n      if (Math.random() > 0.8) {\r\n      this.spawn();\r\n      }\r\n    }\r\n  }\r\n  get value() {\r\n    return this._value || 0;\r\n  }\r\n\r\n  set value(value) {\r\n    this._value = value;\r\n    this.element.innerHTML = value == 0 ? \"\" : value;\r\n    this.element.setAttribute(\"data-cell\", value);\r\n  }\r\n\r\n  spawn(savedValue) {\r\n    if(typeof savedValue == \"number\"){\r\n      this.value = savedValue;\r\n    } else {\r\n      this.value = Math.random() > 0.85 ? 4 : 2;\r\n    }\r\n    this.highlight(\"game-field__cell-highlight-new\");\r\n  }\r\n\r\n  clear() {\r\n    this.value = \"\";\r\n  }\r\n\r\n  merge(cell) {\r\n    if (this.value) {\r\n      this.game.onCellMerge(this.value + cell.value);\r\n    }\r\n    new AnimateCell(cell, this);\r\n    this.value += cell.value;\r\n    this.highlight();\r\n    cell.clear();\r\n  }\r\n\r\n  isSameTo(cell) {\r\n    return this.value == cell.value;\r\n  }\r\n\r\n  get isEmpty() {\r\n    return this.value == 0;\r\n  }\r\n\r\n  highlight(className = \"game-field__cell-highlight\") {\r\n    this.element.className = \"game-field__cell \" + className;\r\n    let highlightTime = 200;\r\n    let highlightStartTime = new Date();\r\n    this.highlightStartTime = highlightStartTime;\r\n    setTimeout(\r\n      function() {\r\n        if (highlightStartTime == this.highlightStartTime) {\r\n          this.element.className = \"game-field__cell\";\r\n        }\r\n      }.bind(this),\r\n      highlightTime\r\n    );\r\n  }\r\n}\r\n\r\nclass AnimateCell extends Cell {\r\n  constructor(fromCell, toCell) {\r\n    super();\r\n    this.element = super.createAndAppend({\r\n      className: \"game-field__cell game-field__cell-animate\"\r\n    });\r\n    this.element.setAttribute(\r\n      \"data-cell\",\r\n      fromCell.element.getAttribute(\"data-cell\")\r\n    );\r\n\r\n    this.element.style.top = fromCell.element.offsetTop + \"px\";\r\n    this.element.style.left = fromCell.element.offsetLeft + \"px\";\r\n\r\n    fromCell.fieldElement.appendChild(this.element);\r\n\r\n    this.element.style.top = toCell.element.offsetTop + \"px\";\r\n    this.element.style.left = toCell.element.offsetLeft + \"px\";\r\n\r\n    setTimeout(\r\n      function() {\r\n        fromCell.fieldElement.removeChild(this.element);\r\n      }.bind(this),\r\n      1000\r\n    );\r\n  }\r\n}\r\n","class Game extends App {\r\n  constructor(parentElement, size = 4) {\r\n    super();\r\n    const lastGameField = super.gameFieldToArray(super.findItemInLocalStorage(\"savedGame\") || \"\");\r\n    const lastGameScore = super.findItemInLocalStorage(\"savedScore\");\r\n    this.size = lastGameField ? lastGameField.length : size;\r\n    const gameFieldElement = super.createAndAppend({\r\n      className: \"game-container\",\r\n      parentElement\r\n    });\r\n    this.headerElement = super.createAndAppend({\r\n      className: \"game-header\",\r\n      parentElement: gameFieldElement\r\n    });\r\n    this.gameScoreContainer = super.createAndAppend({\r\n      className: \"game-score-container\",\r\n      parentElement: this.headerElement\r\n    });\r\n    this.gameScoreItem = super.createAndAppend({\r\n      className: \"game-score-item\",\r\n      parentElement: this.gameScoreContainer\r\n    });\r\n    this.bestGameScoreItem = super.createAndAppend({\r\n      className: \"game-best-score-item\",\r\n      parentElement: this.gameScoreContainer\r\n    });\r\n    const newGameBtn = super.createAndAppend({\r\n      className: \"new-game_btn\",\r\n      parentElement: this.headerElement\r\n    });\r\n    const previousStateBtn = super.createAndAppend({\r\n      className: \"previous-state_btn\",\r\n      parentElement: this.headerElement\r\n    });\r\n    this.score = +lastGameScore || 0;\r\n    this.bestScore = super.findItemInLocalStorage(\"best_score\") || 0;\r\n\r\n    const fieldElement = super.createAndAppend({\r\n      className: \"game-field\",\r\n      parentElement: gameFieldElement\r\n    });\r\n\r\n    \r\n    this.field = [];\r\n    let i, k;\r\n    for (i = 0; i < size; i += 1) {\r\n      this.field[i] = [];\r\n      for (k = 0; k < size; k += 1) {\r\n        let value = lastGameField.length ? lastGameField[i][k][0] : null;\r\n        this.field[i][k] = new Cell(fieldElement, this, value);\r\n      }\r\n    }\r\n    \r\n  \r\n    \r\n\r\n    addEventListener(\"keyup\", event => {\r\n      switch (event.keyCode) {\r\n        case 38:\r\n          this.moveUp();\r\n          break;\r\n        case 40:\r\n          this.moveDown();\r\n          break;\r\n        case 37:\r\n          this.moveLeft();\r\n          break;\r\n        case 39:\r\n          this.moveRight();\r\n          break;\r\n      }\r\n    });\r\n    newGameBtn.addEventListener(\"click\", () => {\r\n      this.field = 0;\r\n      this.score = 0;\r\n      location.href = location.href;\r\n    });\r\n    previousStateBtn.addEventListener(\"click\", () => {\r\n      new Promise((resolve, reject) => {\r\n        location.href = location.href;\r\n        resolve();\r\n    }).then(\r\n        () => {\r\n            localStorage.setItem(\"savedGame\", localStorage.getItem(\"previousMove\"));\r\n            localStorage.setItem(\"savedScore\", localStorage.getItem(\"previousMoveScore\"));\r\n        })\r\n    })\r\n    window.onbeforeunload = function() {\r\n      localStorage.setItem(\"savedGame\", App.gameFieldToString(game.field));\r\n      localStorage.setItem(\"savedScore\", game.score);\r\n    };\r\n  }\r\n\r\n  set score(value) {\r\n    this._score = value;\r\n    this.gameScoreItem.innerHTML = \"Score: \" + value + \"</br>\";\r\n  }\r\n\r\n  get score() {\r\n    return this._score;\r\n  }\r\n\r\n  set bestScore(value) {\r\n    this._bestScore = value;\r\n    this.bestGameScoreItem.innerHTML = \"Best score: \" + value;\r\n  }\r\n\r\n  get bestScore(){\r\n    return this._bestScore;\r\n  }\r\n\r\n  spawnUnit() {\r\n    let emptyCells = [],\r\n      i,\r\n      k;\r\n    for (i = 0; i < this.field.length; i += 1) {\r\n      for (k = 0; k < this.field.length; k += 1) {\r\n        if (!this.field[i][k].value) {\r\n          emptyCells.push(this.field[i][k]);\r\n        }\r\n      }\r\n    }\r\n    if (emptyCells.length) {\r\n      let cell = emptyCells[super.getRandomInt(0, emptyCells.length - 1)];\r\n      cell.spawn(cell);\r\n    } else {\r\n      alert(\"You lose!\");\r\n    }\r\n  }\r\n\r\n  moveRight() {\r\n    this.saveCurrentField(this.field);\r\n    this.saveCurrentScore(this.score);\r\n    let i, k, nextCell, nextCellKey, hasMoved, currentCell;\r\n    for (i = 0; i < this.size; i += 1) {\r\n      for (k = this.size - 2; k >= 0; k -= 1) {\r\n        currentCell = this.field[i][k];\r\n        if (currentCell.isEmpty && this.field[i][k + 1].isEmpty) {\r\n          continue;\r\n        }\r\n\r\n        nextCellKey = k + 1;\r\n        while (nextCellKey < this.size) {\r\n          nextCell = this.field[i][nextCellKey];\r\n          if (!nextCell.isEmpty || this.isLastKey(nextCellKey)) {\r\n            if (\r\n              (nextCell.isEmpty && this.isLastKey(nextCellKey)) ||\r\n              nextCell.isSameTo(currentCell)\r\n            ) {\r\n              this.field[i][nextCellKey].merge(currentCell);\r\n              hasMoved = true;\r\n            } else if (!nextCell.isEmpty && nextCellKey - 1 != k) {\r\n              this.field[i][nextCellKey - 1].merge(currentCell);\r\n              hasMoved = true;\r\n            }\r\n            break;\r\n          }\r\n          nextCellKey += 1;\r\n          nextCell = this.field[i][nextCellKey];\r\n        }\r\n      }\r\n    }\r\n    hasMoved && this.spawnUnit();\r\n  }\r\n  isLastKey(key) {\r\n    return key == this.size - 1;\r\n  }\r\n  isFirstKey(key) {\r\n    return key == 0;\r\n  }\r\n\r\n  moveLeft() {\r\n    this.saveCurrentField(this.field);\r\n    this.saveCurrentScore(this.score);\r\n    let i, k, nextCell, nextCellKey, hasMoved, currentCell;\r\n    for (i = 0; i < this.size; i += 1) {\r\n      for (k = 1; k < this.size; k += 1) {\r\n        currentCell = this.field[i][k];\r\n        if (currentCell.isEmpty) {\r\n          continue;\r\n        }\r\n\r\n        nextCellKey = k - 1;\r\n        while (nextCellKey >= 0) {\r\n          nextCell = this.field[i][nextCellKey];\r\n          if (!nextCell.isEmpty || this.isFirstKey(nextCellKey)) {\r\n            if (\r\n              (nextCell.isEmpty && this.isFirstKey(nextCellKey)) ||\r\n              nextCell.isSameTo(currentCell)\r\n            ) {\r\n              this.field[i][nextCellKey].merge(currentCell);\r\n              hasMoved = true;\r\n            } else if (!nextCell.isEmpty && nextCellKey + 1 != k) {\r\n              this.field[i][nextCellKey + 1].merge(currentCell);\r\n              hasMoved = true;\r\n            }\r\n            break;\r\n          }\r\n          nextCellKey -= 1;\r\n          nextCell = this.field[i][nextCellKey];\r\n        }\r\n      }\r\n    }\r\n    hasMoved && this.spawnUnit();\r\n  }\r\n\r\n  moveDown() {\r\n    this.saveCurrentField(this.field);\r\n    this.saveCurrentScore(this.score);\r\n    let i, k, nextCell, nextCellKey, hasMoved, currentCell;\r\n    for (k = 0; k < this.size; k += 1) {\r\n      for (i = this.size - 2; i >= 0; i -= 1) {\r\n        currentCell = this.field[i][k];\r\n        if (currentCell.isEmpty) {\r\n          continue;\r\n        }\r\n\r\n        nextCellKey = i + 1;\r\n        while (nextCellKey < this.size) {\r\n          nextCell = this.field[nextCellKey][k];\r\n          if (!nextCell.isEmpty || this.isLastKey(nextCellKey)) {\r\n            if (\r\n              (nextCell.isEmpty && this.isLastKey(nextCellKey)) ||\r\n              nextCell.isSameTo(currentCell)\r\n            ) {\r\n              this.field[nextCellKey][k].merge(currentCell);\r\n              hasMoved = true;\r\n            } else if (!nextCell.isEmpty && nextCellKey - 1 != i) {\r\n              this.field[nextCellKey - 1][k].merge(currentCell);\r\n              hasMoved = true;\r\n            }\r\n            break;\r\n          }\r\n          nextCellKey += 1;\r\n          nextCell = this.field[nextCellKey][k];\r\n        }\r\n      }\r\n    }\r\n    hasMoved && this.spawnUnit();\r\n  }\r\n\r\n  moveUp() {\r\n    this.saveCurrentField(this.field);\r\n    this.saveCurrentScore(this.score);\r\n    let i, k, nextCell, nextCellKey, hasMoved, currentCell;\r\n    for (k = 0; k < this.size; k += 1) {\r\n      for (i = 1; i < this.size; i += 1) {\r\n        currentCell = this.field[i][k];\r\n        if (currentCell.isEmpty) {\r\n          continue;\r\n        }\r\n\r\n        nextCellKey = i - 1;\r\n        while (nextCellKey >= 0) {\r\n          nextCell = this.field[nextCellKey][k];\r\n          if (!nextCell.isEmpty || this.isFirstKey(nextCellKey)) {\r\n            if (\r\n              (nextCell.isEmpty && this.isFirstKey(nextCellKey)) ||\r\n              nextCell.isSameTo(currentCell)\r\n            ) {\r\n              this.field[nextCellKey][k].merge(currentCell);\r\n              hasMoved = true;\r\n            } else if (!nextCell.isEmpty && nextCellKey + 1 != i) {\r\n              this.field[nextCellKey + 1][k].merge(currentCell);\r\n              hasMoved = true;\r\n            }\r\n            break;\r\n          }\r\n          nextCellKey -= 1;\r\n          nextCell = this.field[nextCellKey][k];\r\n        }\r\n      }\r\n    }\r\n    hasMoved && this.spawnUnit();\r\n  }\r\n\r\n  onCellMerge(value) {\r\n    this.score += value;\r\n    if(this.checkBestScore(this.score)){\r\n      this.bestScore = this.score;\r\n    }\r\n  }\r\n\r\n  saveCurrentField (field) {\r\n    localStorage.setItem(\"previousMove\", App.gameFieldToString(field));\r\n  }\r\n\r\n  saveCurrentScore (value) {\r\n    localStorage.setItem(\"previousMoveScore\", value);\r\n  }\r\n\r\n  checkBestScore(value) {\r\n    if( super.findItemInLocalStorage(\"best_score\") < value){\r\n      localStorage.setItem(\"best_score\", value);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","const game = new Game(document.body, 4);\r\n"]}